// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: track/track.proto

package track

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_track_track_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{0}
}

type SearchTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTrackRequest) Reset() {
	*x = SearchTrackRequest{}
	mi := &file_track_track_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTrackRequest) ProtoMessage() {}

func (x *SearchTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTrackRequest.ProtoReflect.Descriptor instead.
func (*SearchTrackRequest) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{1}
}

func (x *SearchTrackRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchTracksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tracks        []*SearchTrackResponse `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTracksResponse) Reset() {
	*x = SearchTracksResponse{}
	mi := &file_track_track_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTracksResponse) ProtoMessage() {}

func (x *SearchTracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTracksResponse.ProtoReflect.Descriptor instead.
func (*SearchTracksResponse) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{2}
}

func (x *SearchTracksResponse) GetTracks() []*SearchTrackResponse {
	if x != nil {
		return x.Tracks
	}
	return nil
}

type SearchTrackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Coverurl      string                 `protobuf:"bytes,4,opt,name=coverurl,proto3" json:"coverurl,omitempty"`
	Permalink     string                 `protobuf:"bytes,5,opt,name=permalink,proto3" json:"permalink,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTrackResponse) Reset() {
	*x = SearchTrackResponse{}
	mi := &file_track_track_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTrackResponse) ProtoMessage() {}

func (x *SearchTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTrackResponse.ProtoReflect.Descriptor instead.
func (*SearchTrackResponse) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{3}
}

func (x *SearchTrackResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchTrackResponse) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *SearchTrackResponse) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SearchTrackResponse) GetCoverurl() string {
	if x != nil {
		return x.Coverurl
	}
	return ""
}

func (x *SearchTrackResponse) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

type DownloadTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Coverurl      string                 `protobuf:"bytes,4,opt,name=coverurl,proto3" json:"coverurl,omitempty"`
	Permalink     string                 `protobuf:"bytes,5,opt,name=permalink,proto3" json:"permalink,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadTrackRequest) Reset() {
	*x = DownloadTrackRequest{}
	mi := &file_track_track_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTrackRequest) ProtoMessage() {}

func (x *DownloadTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTrackRequest.ProtoReflect.Descriptor instead.
func (*DownloadTrackRequest) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{4}
}

func (x *DownloadTrackRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DownloadTrackRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *DownloadTrackRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DownloadTrackRequest) GetCoverurl() string {
	if x != nil {
		return x.Coverurl
	}
	return ""
}

func (x *DownloadTrackRequest) GetPermalink() string {
	if x != nil {
		return x.Permalink
	}
	return ""
}

type SaveTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Userid        string                 `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Duration      int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Coverurl      string                 `protobuf:"bytes,5,opt,name=coverurl,proto3" json:"coverurl,omitempty"`
	Origin        string                 `protobuf:"bytes,6,opt,name=origin,proto3" json:"origin,omitempty"`
	S3Uuid        string                 `protobuf:"bytes,7,opt,name=s3uuid,proto3" json:"s3uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveTrackRequest) Reset() {
	*x = SaveTrackRequest{}
	mi := &file_track_track_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTrackRequest) ProtoMessage() {}

func (x *SaveTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTrackRequest.ProtoReflect.Descriptor instead.
func (*SaveTrackRequest) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{5}
}

func (x *SaveTrackRequest) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *SaveTrackRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SaveTrackRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *SaveTrackRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SaveTrackRequest) GetCoverurl() string {
	if x != nil {
		return x.Coverurl
	}
	return ""
}

func (x *SaveTrackRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *SaveTrackRequest) GetS3Uuid() string {
	if x != nil {
		return x.S3Uuid
	}
	return ""
}

type GetTracksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTracksRequest) Reset() {
	*x = GetTracksRequest{}
	mi := &file_track_track_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTracksRequest) ProtoMessage() {}

func (x *GetTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTracksRequest.ProtoReflect.Descriptor instead.
func (*GetTracksRequest) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{6}
}

func (x *GetTracksRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetTracksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tracks        []*SearchTrackResponse `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTracksResponse) Reset() {
	*x = GetTracksResponse{}
	mi := &file_track_track_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTracksResponse) ProtoMessage() {}

func (x *GetTracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_track_track_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTracksResponse.ProtoReflect.Descriptor instead.
func (*GetTracksResponse) Descriptor() ([]byte, []int) {
	return file_track_track_proto_rawDescGZIP(), []int{7}
}

func (x *GetTracksResponse) GetTracks() []*SearchTrackResponse {
	if x != nil {
		return x.Tracks
	}
	return nil
}

var File_track_track_proto protoreflect.FileDescriptor

const file_track_track_proto_rawDesc = "" +
	"\n" +
	"\x11track/track.proto\x12\x05track\"\a\n" +
	"\x05Empty\"*\n" +
	"\x12SearchTrackRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"J\n" +
	"\x14SearchTracksResponse\x122\n" +
	"\x06tracks\x18\x01 \x03(\v2\x1a.track.SearchTrackResponseR\x06tracks\"\x99\x01\n" +
	"\x13SearchTrackResponse\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x02 \x01(\tR\x06artist\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x1a\n" +
	"\bcoverurl\x18\x04 \x01(\tR\bcoverurl\x12\x1c\n" +
	"\tpermalink\x18\x05 \x01(\tR\tpermalink\"\x9a\x01\n" +
	"\x14DownloadTrackRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x02 \x01(\tR\x06artist\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x1a\n" +
	"\bcoverurl\x18\x04 \x01(\tR\bcoverurl\x12\x1c\n" +
	"\tpermalink\x18\x05 \x01(\tR\tpermalink\"\xc0\x01\n" +
	"\x10SaveTrackRequest\x12\x16\n" +
	"\x06userid\x18\x01 \x01(\tR\x06userid\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x03 \x01(\tR\x06artist\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x05R\bduration\x12\x1a\n" +
	"\bcoverurl\x18\x05 \x01(\tR\bcoverurl\x12\x16\n" +
	"\x06origin\x18\x06 \x01(\tR\x06origin\x12\x16\n" +
	"\x06s3uuid\x18\a \x01(\tR\x06s3uuid\"$\n" +
	"\x10GetTracksRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"G\n" +
	"\x11GetTracksResponse\x122\n" +
	"\x06tracks\x18\x01 \x03(\v2\x1a.track.SearchTrackResponseR\x06tracks2\xef\x01\n" +
	"\x05Track\x12@\n" +
	"\x06Search\x12\x19.track.SearchTrackRequest\x1a\x1b.track.SearchTracksResponse\x125\n" +
	"\bDownload\x12\x1b.track.DownloadTrackRequest\x1a\f.track.Empty\x12-\n" +
	"\x04Save\x12\x17.track.SaveTrackRequest\x1a\f.track.Empty\x12>\n" +
	"\tGetTracks\x12\x17.track.GetTracksRequest\x1a\x18.track.GetTracksResponseB3Z1github.com/33software/l33sten-shared/gen/go/trackb\x06proto3"

var (
	file_track_track_proto_rawDescOnce sync.Once
	file_track_track_proto_rawDescData []byte
)

func file_track_track_proto_rawDescGZIP() []byte {
	file_track_track_proto_rawDescOnce.Do(func() {
		file_track_track_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_track_track_proto_rawDesc), len(file_track_track_proto_rawDesc)))
	})
	return file_track_track_proto_rawDescData
}

var file_track_track_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_track_track_proto_goTypes = []any{
	(*Empty)(nil),                // 0: track.Empty
	(*SearchTrackRequest)(nil),   // 1: track.SearchTrackRequest
	(*SearchTracksResponse)(nil), // 2: track.SearchTracksResponse
	(*SearchTrackResponse)(nil),  // 3: track.SearchTrackResponse
	(*DownloadTrackRequest)(nil), // 4: track.DownloadTrackRequest
	(*SaveTrackRequest)(nil),     // 5: track.SaveTrackRequest
	(*GetTracksRequest)(nil),     // 6: track.GetTracksRequest
	(*GetTracksResponse)(nil),    // 7: track.GetTracksResponse
}
var file_track_track_proto_depIdxs = []int32{
	3, // 0: track.SearchTracksResponse.tracks:type_name -> track.SearchTrackResponse
	3, // 1: track.GetTracksResponse.tracks:type_name -> track.SearchTrackResponse
	1, // 2: track.Track.Search:input_type -> track.SearchTrackRequest
	4, // 3: track.Track.Download:input_type -> track.DownloadTrackRequest
	5, // 4: track.Track.Save:input_type -> track.SaveTrackRequest
	6, // 5: track.Track.GetTracks:input_type -> track.GetTracksRequest
	2, // 6: track.Track.Search:output_type -> track.SearchTracksResponse
	0, // 7: track.Track.Download:output_type -> track.Empty
	0, // 8: track.Track.Save:output_type -> track.Empty
	7, // 9: track.Track.GetTracks:output_type -> track.GetTracksResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_track_track_proto_init() }
func file_track_track_proto_init() {
	if File_track_track_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_track_track_proto_rawDesc), len(file_track_track_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_track_track_proto_goTypes,
		DependencyIndexes: file_track_track_proto_depIdxs,
		MessageInfos:      file_track_track_proto_msgTypes,
	}.Build()
	File_track_track_proto = out.File
	file_track_track_proto_goTypes = nil
	file_track_track_proto_depIdxs = nil
}
